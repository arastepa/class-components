{
  "version": 3,
  "sources": ["../../../app/routes/page.$id.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/page.$id.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/page.$id.tsx\");\n}\n// REMIX HMR END\n\nimport { useContext, useState } from 'react';\nimport Search from '../components/Search';\nimport Main from '../components/Main';\nimport styles from '../Styles/app.module.css';\nimport ErrorBtn from '../ErrorBoundary/ErrorBtn';\nimport { ThemeContext } from '../ThemeContext/ThemeContext';\nimport { getPageCount, getPlanets } from '../Services/getPlanets';\nimport Header from '../components/Header';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\nimport { json } from '@remix-run/node';\nimport { useLoaderData, useNavigation } from '@remix-run/react';\nexport const loader = async ({\n  params\n}) => {\n  const id = params.id;\n  const planetsData = await getPlanets(`https://swapi.dev/api/planets/?search=&page=${id ? id : 1}`);\n  const pageNum = await getPageCount();\n  return json({\n    planetsData,\n    pageNum\n  });\n};\nexport const MainPage = () => {\n  _s();\n  const {\n    planetsData,\n    pageNum\n  } = useLoaderData();\n  const navigation = useNavigation();\n  const [pageCount, setPageCount] = useState(pageNum);\n  const [planets, setPlanets] = useState(planetsData);\n  const {\n    theme,\n    setTheme\n  } = useContext(ThemeContext);\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n  const getResponse = async search => {\n    try {\n      let response;\n      if (search === '') {\n        response = planetsData;\n        setPageCount(await getPageCount());\n      } else if (search !== '') {\n        response = await getPlanets(`https://swapi.dev/api/planets/?search=${search}`);\n        setPageCount(response ? Math.ceil(response.length / 10) : 0);\n      }\n      if (response !== undefined) {\n        setPlanets(response);\n      }\n    } catch (error) {\n      return null;\n    }\n  };\n  return <ErrorBoundary>\n      <div className={styles.container}>\n        <Header />\n        {navigation.state === 'loading' ? <div className={styles.spinner}></div> : <>\n            <div className={styles.btns}>\n              <ErrorBtn />\n              <button className={styles.switch} onClick={toggleTheme}>\n                {`Switch to ${theme === 'light' ? 'Dark' : 'Light'} Theme`}\n              </button>\n            </div>\n            <Search onGetResponse={getResponse} onSetPlanets={setPlanets} />\n            <hr />\n            <Main planets={planets} pageCount={pageCount} />\n          </>}\n\n      </div>\n    </ErrorBoundary>;\n};\n_s(MainPage, \"aT7EE5ghBpKV4R8w3y+kxu/EAsE=\", false, function () {\n  return [useLoaderData, useNavigation];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,mBAAqC;AASrC,kBAAqB;AAgDb;AA5ER,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8BAAgC,EAAE;AAAA,EAC3E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AAC3B;AAyBO,IAAM,WAAW,MAAM;AAC5B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,aAAa,cAAc;AACjC,QAAM,CAAC,WAAW,YAAY,QAAI,uBAAS,OAAO;AAClD,QAAM,CAAC,SAAS,UAAU,QAAI,uBAAS,WAAW;AAClD,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,QAAI,yBAAW,YAAY;AAC3B,QAAM,cAAc,MAAM;AACxB,aAAS,UAAU,UAAU,SAAS,OAAO;AAAA,EAC/C;AACA,QAAM,cAAc,OAAM,WAAU;AAClC,QAAI;AACF,UAAI;AACJ,UAAI,WAAW,IAAI;AACjB,mBAAW;AACX,qBAAa,MAAM,aAAa,CAAC;AAAA,MACnC,WAAW,WAAW,IAAI;AACxB,mBAAW,MAAM,WAAW,yCAAyC,QAAQ;AAC7E,qBAAa,WAAW,KAAK,KAAK,SAAS,SAAS,EAAE,IAAI,CAAC;AAAA,MAC7D;AACA,UAAI,aAAa,QAAW;AAC1B,mBAAW,QAAQ;AAAA,MACrB;AAAA,IACF,SAAS,OAAP;AACA,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO,mDAAC,yBACJ,6DAAC,SAAI,WAAW,mBAAO,WACrB;AAAA,uDAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,WAAQ;AAAA,IACP,WAAW,UAAU,YAAY,mDAAC,SAAI,WAAW,mBAAO,WAAvB;AAAA;AAAA;AAAA;AAAA,WAAgC,IAAS,sFACvE;AAAA,yDAAC,SAAI,WAAW,mBAAO,MACrB;AAAA,2DAAC,cAAD;AAAA;AAAA;AAAA;AAAA,eAAU;AAAA,QACV,mDAAC,YAAO,WAAW,mBAAO,QAAQ,SAAS,aACxC,uBAAa,UAAU,UAAU,SAAS,mBAD7C;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAJF;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,MACA,mDAAC,kBAAO,eAAe,aAAa,cAAc,cAAlD;AAAA;AAAA;AAAA;AAAA,aAA8D;AAAA,MAC9D,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAI;AAAA,MACJ,mDAAC,gBAAK,SAAkB,aAAxB;AAAA;AAAA;AAAA;AAAA,aAA8C;AAAA,SATyB;AAAA;AAAA;AAAA;AAAA,WAUzE;AAAA,OAZJ;AAAA;AAAA;AAAA;AAAA,SAcA,KAfG;AAAA;AAAA;AAAA;AAAA,SAgBL;AACJ;AACA,GAAG,UAAU,gCAAgC,OAAO,WAAY;AAC9D,SAAO,CAAC,eAAe,aAAa;AACtC,CAAC;AACD,KAAK;AACL,IAAO,kBAAQ;AACf,IAAI;AACJ,aAAa,IAAI,UAAU;AAE3B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
